---
name: Titanium.Geolocation
summary: The top level Geolocation module. The Geolocation module is used for accessing device location based information.
description: |
    This module combines two sets of features:

    *   Location services. Determining the location of the device.

    *   Geocoding and reverse geocoding. Converting geographic  coordinates into
        addresses, and converting addresses into geographic  coordinates.

    Using location services can have a significant impact on a device's battery life,
    so it's important to use them in the most efficient manner possible. Power consumption
    is strongly influenced by the accuracy and frequency of location updates required by
    your application.

    The location services systems of the underlying platforms are very different, so there
    are significant implementation differences between the platforms.

    The basic methods of requesting location information and receiving location updates
    are essentially the same on all platforms. However, the method of configuring the
    accuracy and frequency of location updates is different for each platform.

    #### Getting Location Information

    There are two ways to get location information:

    *   Make a one-time request with [getCurrentPosition](Titanium.Geolocation.getCurrentPosition).

    *   Register to receive location updates by adding an event listener for the
        [location](Titanium.Geolocation.location) event.

    **NOTE:** Location services stay enabled for as long as a listener is registered for the
    `location` event, so be sure to remove the event listener when you do not require
    location updates.

    #### Configurating Location Updates on iOS

    In iOS, the accuracy (and power consumption) of location services is primarily
    determined by the [accuracy](Titanium.Geolocation.accuracy) setting. This can be set
    to one of the following values:

    *   [ACCURACY_BEST](Titanium.Geolocation.ACCURACY_BEST) (highest accuracy and power consumption)
    *   [ACCURACY_HIGH](Titanium.Geolocation.ACCURACY_HIGH)
    *   [ACCURACY_NEAREST_TEN_METERS](Titanium.Geolocation.ACCURACY_NEAREST_TEN_METERS)
    *   [ACCURACY_HUNDRED_METERS](Titanium.Geolocation.ACCURACY_HUNDRED_METERS)
    *   [ACCURACY_KILOMETER](Titanium.Geolocation.ACCURACY_KILOMETER)
    *   [ACCURACY_LOW](Titanium.Geolocation.ACCURACY_LOW)
    *   [ACCURACY_THREE_KILOMETERS](Titanium.Geolocation.ACCURACY_THREE_KILOMETERS) (lowest
        accuracy and power consumption).
    *   [ACCURACY_BEST_FOR_NAVIGATION](Titanium.Geolocation.ACCURACY_BEST_FOR_NAVIGATION)
        (Available in iOS 6.0 and above)

    Based on the accuracy you choose, iOS uses its own logic to select location providers
    and filter location updates to provide location updates that meet your accuracy
    requirements.

    You can further limit power consumption on iOS by setting the
    [distanceFilter](Titanium.Geolocation.distanceFilter) property to eliminate position
    updates when the user is not moving.

    For iOS 8 and later, add either the
    [`NSLocationWhenInUseUsageDescription`](https://developer.apple.com/library/prerelease/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW26)
    or
    [`NSLocationAlwaysUsageDescription`](https://developer.apple.com/library/prerelease/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW18)
    key to the iOS plist section of the project's `tiapp.xml` file.

        <ti:app>
            <ios>
                <plist>
                    <dict>
                        <key>NSLocationAlwaysUsageDescription</key>
                        <string>
                            Specify the reason for accessing the user's location information.
                            This appears in the alert dialog when asking the user for permission to
                            access their location.
                        </string>
                    </dict>
                </plist>
            </ios>
        </ti:app>

    #### Configurating Location Updates on Android

    Prior to Titanium Mobile 2.0, Titanium attempted to follow the iOS model on Android,
    but this didn't fit the native Android model well. In Release 2.0, three different
    location service modes are supported on Android: *simple*, *manual*, and *legacy*.

    *   *Simple mode* provides a compromise mode that provides adaquate support for
        undemanding location applications without requiring developers to
        write a lot of Android-specific code. To use simple mode:

        1.   Leave the <Titanium.Geolocation.Android.manualMode> flag set to `false` (the
             default value).

        2.   Set the [accuracy](Titanium.Geolocation.accuracy) property to
             either [ACCURACY_HIGH](Titanium.Geolocation.ACCURACY_HIGH) or
             [ACCURACY_LOW](Titanium.Geolocation.ACCURACY_LOW).

    *   *Manual mode* gives developers low-level control of location updates, including
        enabling individual location providers and filtering updates, for the best
        combination of accuracy and battery life.

        Manual mode is used when the <Titanium.Geolocation.Android.manualMode> flag is set
        to `true`. In manual mode, the `accuracy` property is not used, and all
        configuration is done through the <Titanium.Geolocation.Android> module.

    *   *Legacy mode* is the mode that existed prior to 2.0. Legacy mode is
        used when the `manualMode` flag is `false` and the `accuracy` property is
        set to one of the iOS `ACCURACY` constants:

        *   [ACCURACY_BEST](Titanium.Geolocation.ACCURACY_BEST) (highest accuracy and power consumption)
        *   [ACCURACY_NEAREST_TEN_METERS](Titanium.Geolocation.ACCURACY_NEAREST_TEN_METERS)
        *   [ACCURACY_HUNDRED_METERS](Titanium.Geolocation.ACCURACY_HUNDRED_METERS)
        *   [ACCURACY_KILOMETER](Titanium.Geolocation.ACCURACY_KILOMETER)
        *   [ACCURACY_THREE_KILOMETERS](Titanium.Geolocation.ACCURACY_THREE_KILOMETERS) (lowest
            accuracy and power consumption).

        This mode is deprecated and should not be used for new development.

        In this mode, the specified `accuracy` value determines the
        *minimum distance between location updates*. If `accuracy` is set to
        `ACCURACY_BEST`, no distance filter is used on updates.

        In legacy mode, only a single location provider (GPS, network, or passive) is
        enabled at a time. You can specify a the location provider using the
        [preferredProvider](Titanium.Geolocation.preferredProvider) property.

        You can also specifying a desired update frequency using the
        [frequency](Titanium.Geolocation.frequency) property. The `preferredProvider`
        and `frequency` properties are not used in any other mode.

    #### Using the Compass

    Both iOS and Android support a receiving heading updates from a hardware compass, if available.

    Check the [hasCompass](Titanium.Geolocation.hasCompass) property to see if the current
    device supports a compass.

    To retrieve compass readings, you can either use
    [getCurrentHeading](Titanium.Geolocation.getCurrentHeading) as shown in the
    previous example, or add a listener for the
    [heading](Titanium.Geolocation.heading) event, as shown below:

        var compassHandler = function(e) {
          if (e.success === undefined || e.success) {
            Ti.API.info("Heading: " + e.heading.magneticHeading);
          }
        }
        Ti.Geolocation.addEventListener("heading", compassHandler);

    Note that Android does not include a `success` property in the `heading` event.
    Heading events are only generated on Android when heading data is available. So if
    `success` is undefined, we assume that the event contains valid compass data.

    To obtain true heading data for the compass (as opposed to magnetic heading data),
    a current location fix is required. See the notes on
    [trueHeading](HeadingData.trueHeading) for more information.

    As with location updates, the application should unregister for heading updates
    when it is no longer being used, or when it goes into the background. Use
    `removeEventListener` to stop heading updates:

        Ti.Geolocation.removeEventListener('heading', compassHandler);

    Finally, note that neither the Android emulator nor the iOS simulator provide
    compass support. Compass code must be tested on physical devices.

    #### Geocoding Services

    The module provides two methods, [forwardGeocoder](Titanium.Geolocation.forwardGeocoder) and [reverseGeocoder](Titanium.Geolocation.reverseGeocoder)
    to convert between geographic coordinates and addresses. These methods map to MapQuest Open Nominatim Search Service.

    While this API has the advantage that it has no daily usage limits, please note that the data backing this API is crowd sourced and might not return
    proper values for valid addresses and geographic coordinates.

    If geocoding services are essential component of the application, developers are encouraged to use commercial geocoding providers.

extends: Titanium.Module
since: "0.1"
methods:
  - name: forwardGeocoder
    summary: Resolves an address to a location.
    parameters:
      - name: address
        summary: address to resolve.
        type: String
      - name: callback
        summary: Function to invoke on success or failure.
        type: Callback<ForwardGeocodeResponse>
    platforms: [android, iphone, ipad]

  - name: getCurrentHeading
    summary: Retrieves the current compass heading.
    parameters:
      - name: callback
        summary: Function to invoke on success or failure of obtaining the current heading.
        type: Callback<HeadingResponse>
    platforms: [android, iphone, ipad]

  - name: getCurrentPosition
    summary: Retrieves the last known location from the device.
    description: |
        On Android, the radios are not turned on to update the location, and a cached
        location is used.

        On iOS the radios **may** be used if the location is too "old".
    parameters:
      - name: callback
        summary: Function to invoke on success or failure of obtaining the current location.
        type: Callback<LocationResults>
    platforms: [android, iphone, ipad]

  - name: hasLocationPermissions
    summary: Returns `true` if the app has location access.
    parameters:
      - name: authorizationType
        summary: |
            Types of geolocation's authorizations. This is an iOS 8 and above only parameter and is ignored on
            Android and iOS 7.
        constants: [Titanium.Geolocation.AUTHORIZATION_ALWAYS,Titanium.Geolocation.AUTHORIZATION_WHEN_IN_USE]
        type: Number
    returns:
        type: Boolean
    platforms: [iphone, ipad, android]
    since: "5.1.0"

  - name: requestLocationPermissions
    summary: Requests for location access.
    description: |
        On Android, the request view will show if the permission is not accepted by the user, and the user did
        not check the box "Never ask again" when denying the request. If the user checks the box "Never ask again,"
        the user has to manually enable the permission in device settings. If the user asks for permissions or
        tries to get unauthorized location information, then the app should call the request method to show
        the permission settings. This method requests `Manifest.permission.ACCESS_FINE_LOCATION` on Android.
        If you require other permissions, you can also use <Titanium.Android.requestPermissions>.

        In iOS 8, Apple introduced the Info.plist keys `NSLocationWhenInUseUsageDescription` and `NSLocationAlwaysUsageDescription`
        that are used to display an own description while requesting location permissions. In addition to this method, you need to
        include one of these keys (based on how your location updates should behave) or the application will crash if your app does not.
        Check the [Apple docs](https://developer.apple.com/library/prerelease/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html) for more information.
    parameters:
      - name: authorizationType
        summary: Types of geolocation's authorizations. This is an iOS only parameter and is ignored on Android.
        constants: [Titanium.Geolocation.AUTHORIZATION_ALWAYS,Titanium.Geolocation.AUTHORIZATION_WHEN_IN_USE]
        type: Number
      - name: callback
        summary: Function to call upon user decision to grant location access.
        type: Callback<LocationAuthorizationResponse>
    platforms: [iphone, ipad, android]
    since: "5.1.0"

  - name: reverseGeocoder
    summary: Tries to resolve a location to an address.
    description: |
        The callback receives a <ReverseGeocodeResponse> object. If the request
        is successful, the object includes one or more addresses that are possible matches
        for the requested coordinates.
    parameters:

      - name: latitude
        summary: Latitude to search, specified in decimal degrees.
        type: Number

      - name: longitude
        summary: Longitude to search, specified in decimal degrees.
        type: Number

      - name: callback
        summary: Function to invoke on success or failure.
        type: Callback<ReverseGeocodeResponse>
    platforms: [android, iphone, ipad]

events:

  - name: calibration
    summary: Fired when the device detects interface and requires calibration.
    description: |
        When this event is fired, the OS calibration UI is being displayed to the end user.
    platforms: [iphone, ipad]

  - name: heading
    summary: Fired when an heading update is received.
    properties:
      - name: code
        summary: If `success` is false, the error code if available.
        platforms: [android, iphone, ipad]

      - name: success
        summary: Indicate if the heading event was successfully received.
        type: Boolean
        platforms: [android, iphone, ipad]

      - name: error
        summary: If `success` is false, a string describing the error.
        type: String
        platforms: [android, iphone, ipad]

      - name: heading
        summary: Dictionary object containing the heading data.
        type: HeadingData


  - name: location
    summary: Fired when a location update is received.
    properties:

      - name: code
        summary: if `success` is false, the error code if available.
        type: Number

      - name: success
        summary: Indicates if location data was successfully retrieved.
        type: Boolean

      - name: provider
        platforms: [android]
        summary: If `success` is true, object describing the location provider generating this update.
        type: LocationProviderDict

      - name: coords
        summary: If `success` is true, actual location data for this update.
        type: LocationCoordinates

      - name: error
        summary: If `success` is false, a string describing the error.
        type: String

  - name: locationupdatepaused
    summary: Fired when location updates are paused by the OS. Available in iOS 6.0 and later.
    description: |
        This event is fired when [pauseLocationUpdateAutomatically](Titanium.Geolocation.pauseLocationUpdateAutomatically)
        is set to `true` and if the OS detects that the device's location is not changing,
        causing it to pause the delivery of updates in order to shut down the appropriate
        hardware and save power.
    platforms: [iphone, ipad]
    since: "3.1.0"

  - name: locationupdateresumed
    summary: Fired when location manager is resumed by the OS. Available in iOS 6.0 and later.
    description: |
        When location updates are paused and need to be resumed (perhaps because the user
        is moving again), this event is fired to let the app know that it is about to
        begin the delivery of those updates again.
    platforms: [iphone, ipad]
    since: "3.1.0"

  - name: authorization
    summary: Fired when changes are made to the authorization status for location services. Available in iOS 8.0 and later.
    description: |
        This event is fired whenever the application's ability to use location services changes.
        Changes can occur because the user allowed or denied the use of location services for the app or the system as a whole.
    properties:
      - name: authorizationStatus
        summary: New authorization status for the application.
        type: Number
        constants: Titanium.Geolocation.AUTHORIZATION_*
    platforms: [iphone, ipad]
    osver: {ios: {min: "8.0"}}
    since: "3.4.0"

properties:

  - name: ACCURACY_BEST
    summary: |
        Use with [accuracy](Titanium.Geolocation.accuracy) to request the best
        accuracy available.
    description: |
        Using this value results in the most accurate location updates, and the highest
        battery usage.

        Using this value on Android enables *legacy mode* operation, which is not
        recommended.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]

  - name: ACCURACY_HUNDRED_METERS
    summary: |
        Use with [accuracy](Titanium.Geolocation.accuracy) to request location
        updates accurate to the nearest 100 meters.
    description: |
        Using this value on Android enables *legacy mode* operation, which is not
        recommended.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]

  - name: ACCURACY_KILOMETER
    summary: |
        Use with [accuracy](Titanium.Geolocation.accuracy) to request location
        updates accurate to the nearest kilometer.
    description: |
        Using this value on Android enables *legacy mode* operation, which is not
        recommended.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]

  - name: ACCURACY_NEAREST_TEN_METERS
    summary: |
        Use with [accuracy](Titanium.Geolocation.accuracy) to request location
        updates accurate to the nearest 10 meters.
    description: |
        Using this value on Android enables *legacy mode* operation, which is not
        recommended.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]

  - name: ACCURACY_THREE_KILOMETERS
    summary: |
        Use with [accuracy](Titanium.Geolocation.accuracy) to request location
        updates accurate to the nearest three kilometers.
    description: |
        Using this value on Android enables *legacy mode* operation, which is not
        recommended.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]

  - name: ACCURACY_HIGH
    summary: |
        Use with [accuracy](Titanium.Geolocation.accuracy) to request more
        accurate location updates with higher battery usage.
    description: |
        Using this value on Android enables *simple mode* operation.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
    since: "2.0.0"

  - name: ACCURACY_BEST_FOR_NAVIGATION
    summary: |
        Use with [accuracy](Titanium.Geolocation.accuracy) to request highest possible
        accuracy and combine it with additional sensor data.
    description: |
        Using this value is intended for use in navigation applications that require
        precise position information at all times and are intended to be used only while
        the device is plugged in.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
    since: "3.1.0"


  - name: ACCURACY_LOW
    summary: |
        Use with [accuracy](Titanium.Geolocation.accuracy) to request less
        accurate location updates with lower battery usage.
    description: |
        Using this value on Android enables *simple mode* operation.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
    since: "2.0.0"

  - name: AUTHORIZATION_AUTHORIZED
    summary: |
        A [locationServicesAuthorization](Titanium.Geolocation.locationServicesAuthorization) value
        indicating that the application is authorized to use location services.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]

  - name: AUTHORIZATION_DENIED
    summary: |
        A [locationServicesAuthorization](Titanium.Geolocation.locationServicesAuthorization) value
        indicating that the application is not authorized to use location services, *or*
        location services are disabled.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]

  - name: AUTHORIZATION_RESTRICTED
    summary: |
        A [locationServicesAuthorization](Titanium.Geolocation.locationServicesAuthorization) value
        indicating that the application is not authorized to use location servies *and*
        the user cannot change this application's status.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]

  - name: AUTHORIZATION_UNKNOWN
    summary: |
        A [locationServicesAuthorization](Titanium.Geolocation.locationServicesAuthorization) value
        indicating that the authorization state is unknown.
    description: |
        This value is always returned if the device is running an iOS release prior to 4.2.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]

  - name: AUTHORIZATION_ALWAYS
    summary: |
        A [locationServicesAuthorization](Titanium.Geolocation.locationServicesAuthorization) value
        indicating that the application is authorized to start location services at any time. This authorization
        includes the use of all location services, including monitoring regions and significant location changes.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
    osver: {ios: {min: "8.0"}}
    since: "3.4.0"

  - name: AUTHORIZATION_WHEN_IN_USE
    summary: |
        A [locationServicesAuthorization](Titanium.Geolocation.locationServicesAuthorization) value
        indicating that the application is authorized to start most location services only while running in the foreground.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
    osver: {ios: {min: "8.0"}}
    since: "3.4.0"

  - name: ERROR_DENIED
    summary: Error code indicating that the user denied access to the location service.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only

  - name: ERROR_HEADING_FAILURE
    summary: Error code indicating that the heading could not be determined.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only

  - name: ERROR_LOCATION_UNKNOWN
    summary: Error code indicating that the user's location could not be determined.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only

  - name: ERROR_NETWORK
    summary: Error code indicating that the network was unavailable.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only

  - name: ERROR_REGION_MONITORING_DELAYED
    summary: Error code indicating that region monitoring is delayed.
    platforms: [iphone, ipad]
    permission: read-only
    osver:
        ios:
            min: "4.0"
    type: Number

  - name: ERROR_REGION_MONITORING_DENIED
    summary: Error code indicating that region monitoring is denied.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
    osver:
        ios:
            min: "4.0"

  - name: ERROR_REGION_MONITORING_FAILURE
    summary: Error code indicating a region monitoring failure.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
    osver:
        ios:
            min: "4.0"

  - name: ERROR_TIMEOUT
    summary: Error indicating a timeout.
    platforms: []
    type: Number
    permission: read-only

  - name: PROVIDER_GPS
    summary: |
        Specifies the GPS location provider.
    description: |
        Used with [preferredProvider](Titanium.Geolocation.preferredProvider),
        [LocationProvider.name](Titanium.Geolocation.Android.LocationProvider),
        [LocationRule.provider](Titanium.Geolocation.Android.LocationRule).

        In general, the GPS provider has the highest power consumption and the
        highest accuracy, but this may vary. In some circumstances, the network
        provider may be more reliable.
    type: String
    permission: read-only
    platforms: [android]

  - name: PROVIDER_NETWORK
    summary: |
        Specifies the network location provider.
    description: |
        Used with [preferredProvider](Titanium.Geolocation.preferredProvider),
        [LocationProvider.name](Titanium.Geolocation.Android.LocationProvider),
        [LocationRule.provider](Titanium.Geolocation.Android.LocationRule).

        Generally requires less power than the GPS provider and provides less accurate
        results, but may produce very accurate results in densely-populated areas
        with many cell towers and WiFi networks.
    type: String
    permission: read-only
    platforms: [android]

  - name: PROVIDER_PASSIVE
    summary: |
        Specifies the passive location provider.
    description: |
        Used with [preferredProvider](Titanium.Geolocation.preferredProvider),
        [LocationProvider.name](Titanium.Geolocation.Android.LocationProvider),
        [LocationRule.provider](Titanium.Geolocation.Android.LocationRule).

        This provider only uses cached location information, so it does not use
        any power, but makes no guarantee that the location results are recent.
    type: String
    permission: read-only
    platforms: [android]

  - name: ACTIVITYTYPE_OTHER
    summary: The location data is being used for an unknown activity.
    description: |
        Used with [activityType](Titanium.Geolocation.activityType). Available in iOS 6.0 and later.
    type: String
    permission: read-only
    platforms: [iphone,ipad]
    since: "3.1.0"

  - name: ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION
    summary: The location data is used for tracking location changes to the automobile specifically during vehicular navigation.
    description: |
        Used with [activityType](Titanium.Geolocation.activityType). This activity might
        cause location updates to be paused only when the vehicle does not move for an
        extended period of time. Available in iOS 6.0 and later.
    type: String
    permission: read-only
    platforms: [iphone,ipad]
    since: "3.1.0"

  - name: ACTIVITYTYPE_FITNESS
    summary: The location data is used for tracking any pedestrian-related activity.
    description: |
        Used with [activityType](Titanium.Geolocation.activityType). This activity might
        cause location updates to be paused only when the user does not move a significant
        distance over a period of time.Available in iOS 6.0 and later.
    type: String
    permission: read-only
    platforms: [iphone,ipad]
    since: "3.1.0"

  - name: ACTIVITYTYPE_OTHER_NAVIGATION
    summary: |
        The location data is used for tracking movements of other types of vehicular
        navigation that are not automobile related.
    description: |
        Used with [activityType](Titanium.Geolocation.activityType). You would use this
        to track navigation by boat, train, or plane. Do not use this type for pedestrian
        navigation tracking. This activity might cause location updates to be paused only
        when the vehicle does not move a significant distance over a period of time.
        Available in iOS 6.0 and later.
    type: String
    permission: read-only
    platforms: [iphone,ipad]
    since: "3.1.0"


  - name: accuracy
    summary: Specifies the requested accuracy for location updates.
    description: |
        For basic location updates on all platforms, set `accuracy` to either:

        *   [ACCURACY_HIGH](Titanium.Geolocation.ACCURACY_HIGH) for higher-quality location
            updates, with the higher power consumption.
        *   [ACCURACY_LOW](Titanium.Geolocation.ACCURACY_LOW) for lower-quality location
            updates with lower power consumption.

        For finer-grained control on iOS, specify one of `ACCURACY_BEST`,
        `ACCURACY_NEAREST_TEN_METERS`, `ACCURACY_HUNDRED_METERS`, `ACCURACY_KILOMETER`, or
        `ACCURACY_THREE_KILOMETERS`.

        For finer-grained control on Android, use *manual mode*, instead of specifing an accuracy.
        This mode requires more active management on the part of the application, but it
        is recommended to maximize accuracy and battery life.
        See <Titanium.Geolocation.Android> for details on using manual mode.

        Note that for backwards compatibility, Android supports using the iOS accuracy constants.
        This usage is deprecated. Applications using one of the iOS constants should
        migrate to using `ACCURACY_HIGH`, `ACCURACY_LOW`, or Android manual mode.
    type: Number
    constants: Titanium.Geolocation.ACCURACY_*


  - name: distanceFilter
    summary: The minimum change of position (in meters) before a 'location' event is fired.
    description: |
        If set to 0, distance filtering is disabled, meaning that location events are
        generated continuously.
    type: Number
    default: 0
    platforms: [iphone, ipad]

  - name: frequency
    deprecated:
        since: "2.0.0"
        notes: |
            Android legacy mode operation is deprecated. For new development, use
            either simple mode or manual mode. See "Configurating Location Updates on Android"
            in the main description of this class for more information.
    summary: Requested frequency for location updates, in milliseconds.
    description: |
        Setting a frequency value enables legacy location mode on Android.
        Note that only a single provider can be active at one time in legacy mode.

        Note that the frequency value is used as a guideline: there are no guarantees
        that the device will provide updates at the specified frequency.

        A lower frequency value generally increases power consumption.
        A value of 0 means that updates should be generated as quickly as possible.
    type: Number


  - name: hasCompass
    summary: Indicates whether the current device supports a compass.
    type: Boolean
    permission: read-only
    platforms: [android, iphone, ipad]

  - name: headingFilter
    summary: Minimum heading change (in degrees) before a `heading` event is fired.
    description: |
        Set to a value greater than zero to reduce the number of heading events generated.
    type: Number
    default: 0 (No limit on heading updates)
    platforms: [iphone, ipad]

  - name: locationServicesAuthorization
    summary: Returns an authorization constant indicating if the application has access to location services.
    description: |
         Always returns `AUTHORIZATION_UNKNOWN` on pre-4.2 devices.

         If `locationServicesAuthorization` is `AUTHORIZATION_RESTRICTED`, you should not
         attempt to re-authorize: this will lead to issues.
    type: Number
    constants: Titanium.Geolocation.AUTHORIZATION_*
    platforms: [iphone, ipad]
    osver:
        ios:
            min: "4.2"

  - name: locationServicesEnabled
    summary: Indicates if the user has enabled or disabled location services for the device (not the application).
    description: |
        This method returns `true` if *any* location provider is enabled.

        On Android OS 2.2 and above, there is a new,  "passive" location provider that is enabled
        at all times, even when the user disables both the GPS and Network location providers.
        Therefore, this method always returns `true` on these devices.
    type: Boolean
    permission: read-only

  - name: preferredProvider
    deprecated:
        since: "2.0.0"
        notes: |
            Android legacy mode operation is deprecated. For new development, use
            either simple mode or manual mode. See "Configurating Location Updates on Android"
            in the main description of this class for more information.
    summary: |
        Determines the preferred location provider.
    description: |
        Setting a preferred provider enables legacy location mode on Android.
        Note that only a single provider can be active at one time in legacy mode.

        The preferred provider affects power consumption. In general, `PROVIDER_GPS`
        requires the most power, and `PROVIDER_PASSIVE` requires the least.

        If `undefined`, the preferred provider is auto-detected.
    type: String
    constants: Titanium.Geolocation.PROVIDER_*
    platforms: [android]
    default: <Titanium.Geolocation.PROVIDER_NETWORK>

  - name: purpose
    summary: |
        Text to display in the permission dialog when requesting location
        services.
    description: |
        This property informs the end user why location services are being requested by
        the application. This property is **required** starting in iOS 4.0.
        deprecated for >= iOS6, include the `NSLocationUsageDescription` key with your
        description in tiapp.xml instead.
    platforms: [iphone, ipad]
    type: String
    osver: {ios: {max: "5.0"}}

  - name: showCalibration
    summary: Determines whether the compass calibration UI is shown if needed.
    description: |
        Set to `false` to disable display of the compass calibration UI. This may result
        in invalid heading data.
    type: Boolean
    default: true
    platforms: [iphone, ipad]

  - name: trackSignificantLocationChange
    summary: |
        Indicates if the location changes should be updated only when a significant change
        in location occurs.
    description: |
        The trackSignificantLocationChange service offers a low-power location service for
        devices with cellular radios.This service is available only in iOS 4.0 and later.
        This service offers a significant power savings and provides accuracy that is good
        enough for most applications. It uses the device's cellular radio to determine the
        user's location  and report changes in that location, allowing the system to manage
        power usage much more aggressively than it could otherwise. This service is also
        capable of waking up an application that is currently suspended or not running in
        order to deliver new location data.
    type: Boolean
    default: false
    platforms: [iphone, ipad]
    since: "2.1.2"

  - name: allowsBackgroundLocationUpdates
    summary: |
        Determines if the app can do background location updates.
    description: |
        When `UIBackgroundModes` include `location` in tiapp.xml, this property is
        set to `true` by default. Available in iOS 9.0 and later.
    type: Boolean
    default: true
    platforms: [iphone, ipad]
    osver: {ios: {min: "9.0"}}
    since: "5.0.0"

  - name: activityType
    summary: |
        The type of user activity to be associated with the location updates. Available in iOS 6.0 and later.
    description: |
        The information in this property is used as a cue to determine when location
        updates may be automatically paused. Pausing updates gives the system the
        opportunity to save power in situations where the user's location is not likely
        to be changing. For example, if the activity type is
        [ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION](Titanium.Geolocation.ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION)
        and no location changes have occurred recently, the radios might be powered down
        until movement is detected again.
    type: Number
    constants: Titanium.Geolocation.ACTIVITYTYPE_*
    default: <Titanium.Geolocation.ACTIVITYTYPE_OTHER>
    since: "3.1.0"
    platforms: [iphone,ipad]

  - name: pauseLocationUpdateAutomatically
    summary: Indicates whether the location updates may be paused. Available in iOS 6.0 and later.
    description: |
        Allowing the location updates to be paused can improve battery life on the
        target device without sacrificing location data. When this property is set to YES,
        the location updates are paused (and powers down the appropriate hardware) at
        times when the location data is unlikely to change. For example, if the user stops
        for food while using a navigation app, the location manager might pause updates for
        a period of time. You can help the determination of when to pause location updates
        by assigning a value to the [activityType](Titanium.Geolocation.activityType) property.
    type: Boolean
    default: false
    platforms: [iphone,ipad]
    since: "3.1.0"

  - name: lastGeolocation
    summary: JSON representation of the last geolocation received.
    description: |
         LastEvent is the JSON version of the last geolocation sent by the OS. This does not
         trigger a geolocation attempt, nor wait for such. If no geolocation has happened,
         this value may be null or undefined.
    type: String
    since: "3.1.2"
    permission: read-only
    platforms: [android, iphone, ipad]
---
name: LocationResults
summary: |
    Argument passed to the [getCurrentPosition](Titanium.Geolocation.getCurrentPosition) callback.
extends: ErrorResponse
properties:

  - name: provider
    platforms: [android]
    summary: If `success` is true, object describing the location provider generating this update.
    type: LocationProviderDict

  - name: coords
    summary: If `success` is true, actual location data for this update.
    type: LocationCoordinates

---
name: LocationCoordinates
summary: Simple object holding the data for a location update.
properties:

  - name: latitude
    summary: Latitude of the location update, in decimal degrees.
    type: Number

  - name: longitude
    summary: Longitude of the location update, in decimal degrees.
    type: Number

  - name: altitude
    summary: Altitude of the location update, in meters.
    type: Number

  - name: accuracy
    summary:  Accuracy of the location update, in meters.
    type: Number

  - name: altitudeAccuracy
    summary:  Vertical accuracy of the location update, in meters.
    type: Number

  - name: heading
    summary: |
        Compass heading, in degrees. May be unknown if device is not moving. On
        iOS, a negative value indicates that the heading data is not valid.
    type: Number

  - name: speed
    summary: |
        Current speed in meters/second. On iOS, a negative value indicates that the
        heading data is not valid or the accuracy is configured incorrectly.
        Note: Due to the Apple Geolocation API, set the <Titanium.Geolocation.accuracy>
        property to <Titanium.Geolocation.ACCURACY_BEST_FOR_NAVIGATION> in order to properly
        measure speed changes and prevent the app from returning negative values.
    type: Number

  - name: timestamp
    summary: Timestamp for this location update, in milliseconds.
    type: Number

  - name: floor
    summary: The floor of the building on which the user is located. Available in iOS 8.0 and later.
    type: LocationCoordinatesFloor
    osver: {ios: {min: "8.0"}}
    since: { iphone: "3.6.0", ipad: "3.6.0" }
    platforms: [iphone, ipad]

---
name: LocationCoordinatesFloor
summary: |
        Simple object holding floor of the building on which the user is located.
        In places where floor information can be determined.
properties:

  - name: level
    summary: The logical floor of the building.
    description: |
        Level values represent logical levels above or below ground level and are not
        intended to correspond to any numbering scheme in use by the building itself.
        The ground floor of a building is always represented by the value 0. Floors
        above the ground floor are represented by positive integers, so a value of 1
        represents the floor above ground level, a value of 2 represents two floors
        above ground level, and so on. Floors below the ground floor are represented
        by corresponding negative integers, with a value of -1 representing the floor
        immediately below ground level and so on.
    type: Number

---
name: ForwardGeocodeResponse
summary: |
    Simple object returned in the callback from the
    [forwardGeocoder](Titanium.Geolocation.forwardGeocoder) method.

    Note that Android includes a number of extra fields.
extends: ErrorResponse
properties:

  - name: success
    summary: Indicates if the operation succeeded.
    description: Returns `true` if request succeeded, `false` otherwise.
    type: Boolean
    platforms: [android, iphone, ipad]

  - name: error
    summary: Error message, if any returned.
    description: Will be undefined if `success` is `true`.
    type: String
    platforms: [android, iphone, ipad]

  - name: code
    summary: Error code. Returns 0 if `success` is `true`.
    description: |
        Error code will be 0 if `success` is `true`, nonzero otherwise. If the error
        was generated by the operating system, that system's error value is used.
        Otherwise, this value will be -1.
    type: Number
    since: { android: "3.1.0", iphone: "3.1.0", ipad: "3.1.0" }
    platforms: [android, iphone, ipad]

  - name: accuracy
    summary: Estimated accuracy of the geocoding, in meters.
    type: Number
    platforms: [iphone, ipad]

  - name: longitude
    summary: Longitude of the geocoded address.
    type: String
    platforms: [android, iphone, ipad]

  - name: latitude
    summary: Latitude of the geocoded address.
    type: String
    platforms: [android, iphone, ipad]

  - name: street
    summary: Street name, without street address.
    type: String
    platforms: [android]

  - name: street1
    summary: Street name.
    type: String
    platforms: [android]

  - name: city
    summary: City name.
    type: String
    platforms: [android]

  - name: region1
    summary: First line of region.
    type: String
    platforms: [android]

  - name: region2
    summary: Not used.
    type: String
    platforms: [android]

  - name: postalCode
    summary: Postal code.
    type: String
    platforms: [android]

  - name: country
    summary: Country name.
    type: String
    platforms: [android]

  - name: countryCode
    summary: Country code.
    type: String
    platforms: [android]

  - name: country_code
    summary: Country code. Same as `countryCode`.
    type: String
    platforms: [android]

  - name: displayAddress
    summary: Display address. Identical to `address`.
    type: String
    platforms: [android]

  - name: address
    summary: Full address.
    type: String
    platforms: [android]

---
name: HeadingResponse
summary: |
    Argument passed to the [getCurrentHeading](Titanium.Geolocation.getCurrentHeading) callback.
extends: ErrorResponse
properties:

  - name: success
    summary: Indicates a successful operation.
    description: Returns `true` if request succeeded, `false` otherwise.
    type: Boolean
    platforms: [iphone, ipad]

  - name: error
    summary: Error message, if any returned.
    description: Will be undefined if `success` is `true`.
    type: String
    platforms: [iphone, ipad]

  - name: code
    summary: Error code.
    description: |
        Error code will be 0 if `success` is `true`, nonzero otherwise. If the error
        was generated by the operating system, that system's error value is used.
        Otherwise, this value will be -1.
    type: Number
    platforms: [iphone, ipad]

  - name: heading
    summary: If `success` is true, the actual heading data.
    type: HeadingData

---
name: HeadingData
summary: Simple object holding compass heading data.
properties:

  - name: accuracy
    summary: Accuracy of the compass heading, in platform-specific units.
    description: |
        On iOS, accuracy is returned as a maximum deviation in degrees,
        the smaller the value, the more accurate the heading is. For example,
        a value of 10 means the heading is plus or minus 10 degrees from the
        actual value. A negative value indicates the compass heading is invalid;
        for example, if there is magnetic interference, or if the compass is not calibrated.

        On Android, the value is set to either 1 (low accuracy), 2 (medium accuracy)
        or 3 (high accuracy). No specific definition of these accuracy values is supplied.
    type: Number

  - name: magneticHeading
    summary: Declination in degrees from magnetic North.
    type: Number

  - name: trueHeading
    summary: Declination in degrees from true North.
    description: |
        Calculating the true heading requires correcting the magnetic declination based on
        the device's current location. So `trueHeading` can only be calculated if the device
        has a fairly recent location fix. If you want to obtain the true heading, you
        should register for location updates as well as compass updates. The location fix
        does not need to be very accurate.

        On Android, `trueHeading` is `undefined` if a recent location fix is not available.

    type: Number
    platforms: [android, iphone, ipad]

  - name: timestamp
    summary: Timestamp for the heading data, in milliseconds.
    type: Number

  - name: x
    summary: Raw geomagnetic data for the X axis.
    type: Number
    platforms: [iphone, ipad, android]

  - name: y
    summary: Raw geomagnetic data for the Y axis.
    type: Number
    platforms: [iphone, ipad, android]

  - name: z
    summary: Raw geomagnetic data for the Z axis.
    type: Number
    platforms: [iphone, ipad, android]

---
name: LocationProviderDict
summary: Simple object describing a location provider.
description: |
    The `accuracy` and `power` values correspond to constants defined in the
    Android API. See
    [android.location.Criteria](http://developer.android.com/reference/android/location/Criteria.html)
    in the Android API Reference.

    These values are generalizations. In general, a provider with coarse accuracy will
    provide less accurate results than a provider with fine accuracy, and a provider with
    high power requirements will use more battery power than a provider with low power
    requirements.
properties:

  - name: accuracy
    summary: |
        Accuracy of the location provider, either fine (1) or coarse (2).
    type: Number

  - name: name
    summary: Name of the location provider.
    type: String

  - name: power
    summary: |
        Power consumption for this provider, either low (1), medium (2), or high (3).
    type: Number

---
name: ReverseGeocodeResponse
summary: |
    Simple object returned in the callback from the
    [reverseGeocoder](Titanium.Geolocation.reverseGeocoder) method.
extends: ErrorResponse
properties:

  - name: places
    summary: An array of reverse-geocoded addresses matching the requested location.
    type: Array<GeocodedAddress>

  - name: error
    summary: Error message, if any returned.
    description: Will be undefined if `success` is `true`.
    type: String
    since: "3.1.0"

  - name: code
    summary: Error code. Returns 0 if `success` is `true`.
    description: |
        Error code will be 0 if `success` is `true`, nonzero otherwise. If the error
        was generated by the operating system, that system's error value is used.
        Otherwise, this value will be -1.
    type: Number
    since: "3.1.0"

---
name: GeocodedAddress
summary: |
    Simple object representing a place, returned in the callback from the
    [reverseGeocoder](Titanium.Geolocation.reverseGeocoder) method.

properties:

  - name: street
    summary: Street name, without street address.
    type: String
    platforms: [android, iphone, ipad]

  - name: street1
    summary: Street name.
    type: String
    platforms: [android]

  - name: city
    summary: City name.
    type: String
    platforms: [android, iphone, ipad]

  - name: region1
    summary: First line of region.
    type: String
    platforms: [android]

  - name: region2
    summary: Not used.
    type: String
    platforms: [android]

  - name: postalCode
    summary: Postal code. On iOS, use `zipcode`.
    type: String
    platforms: [android]

  - name: zipcode
    summary: Postal code. On Android, use `postalCode`.
    type: String
    platforms: [iphone, ipad]

  - name: country
    summary: Country name.
    type: String
    platforms: [android, iphone, ipad]

  - name: countryCode
    summary: Country code. On iOS, use `country_code`.
    type: String
    platforms: [android]

  - name: country_code
    summary: Country code. Same as `country_code`.
    type: String
    platforms: [android, iphone, ipad]

  - name: longitude
    summary: Longitude of the geocoded point.
    type: String
    platforms: [android, iphone, ipad]

  - name: latitude
    summary: Latitude of the geocoded point.
    type: String
    platforms: [android, iphone, ipad]

  - name: displayAddress
    summary: Display address. Identical to `address`.
    type: String
    platforms: [android]

  - name: address
    summary: Full address.
    type: String
    platforms: [android, iphone, ipad]
---
name: LocationAuthorizationResponse
summary: Argument passed to the callback when a request finishes successfully or erroneously.
extends: ErrorResponse
