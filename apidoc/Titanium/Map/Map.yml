---
name: Titanium.Map
summary: The top level Map module.  The Map module is used for creating in-application native maps.
description: |
    #### Android Platform Notes

    This module provides native map support using Google Maps API v1. As of March 3, 2013,
    Google is no longer issuing Google Maps API v1 keys and this module can no longer be used to
    support native maps on Android unless you have these keys.

    For new Android applications, use the [ti.map add-on module](Modules.Map)
    to add native maps support for your application. If you have an application that still uses the old keys,
    you can either transition to the new module or continue using the built-in Titanium.Maps module.

    #### iOS Platform Notes

    Since Release 3.2.0, support for this module was removed. Use the [ti.map add-on module](Modules.Map).

extends: Titanium.Module
since: "0.8"
deprecated:
    since: "3.2.0"
    notes: |
        For new iOS and Android applications use the <a href="#!/api/Modules.Map">ti.map add-on module</a>.
        Support for the `Titanium.Map` module in iOS and Android was removed in Release 3.2.0.

        For all other platforms, continue to use this module.
properties:

  - name: ANNOTATION_DRAG_STATE_NONE
    summary: |
        Used in the [pinchangedragstate](Titanium.Map.View.pinchangedragstate) event 
        to indicate that the annotation is not being dragged.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
    since: "2.1.0"

  - name: ANNOTATION_DRAG_STATE_START
    summary: |
        Used in the [pinchangedragstate](Titanium.Map.View.pinchangedragstate) event 
        to indicate that the user started dragging the annotation.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
    since: "2.1.0"

  - name: ANNOTATION_DRAG_STATE_DRAG
    summary: |
        Used in the [pinchangedragstate](Titanium.Map.View.pinchangedragstate) event 
        to indicate that the user moved the annotation.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
    since: "2.1.0"

  - name: ANNOTATION_DRAG_STATE_CANCEL
    summary: |
        Used in the [pinchangedragstate](Titanium.Map.View.pinchangedragstate) event 
        to indicate that the user canceled the drag action.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
    since: "2.1.0"

  - name: ANNOTATION_DRAG_STATE_END
    summary: |
        Used in the [pinchangedragstate](Titanium.Map.View.pinchangedragstate) event 
        to indicate that the user finished moving the annotation.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
    since: "2.1.0"

  - name: ANNOTATION_GREEN
    summary: |
        Color constant used to set a map annotation to green via the 
        <Titanium.Map.Annotation.pincolor> property.
    type: Number
    permission: read-only
    
  - name: ANNOTATION_PURPLE
    summary: |
        Color constant used to set a map annotation to purple via the 
        <Titanium.Map.Annotation.pincolor> property.
    type: Number
    permission: read-only
    
  - name: ANNOTATION_RED
    summary: |
        Color constant used to set a map annotation to red via the 
        <Titanium.Map.Annotation.pincolor> property.
    type: Number
    permission: read-only
    
  - name: HYBRID_TYPE
    summary: Used with [mapType](Titanium.Map.View.mapType) to display a satellite image of the area with road and road name information layered on top.
    description: |
        On Android, `HYBRID_TYPE` produces a road map that looks like 
        [STANDARD_TYPE](Titanium.Map.STANDARD_TYPE), and does not include a satellite
        image. This is a known issue
        ([TIMOB-9673](https://jira.appcelerator.org/browse/TIMOB-9673)).

        Use [SATELLITE_TYPE](Titanium.Map.SATELLITE_TYPE) to specify a hybrid-type map on
        Android.
    type: Number
    permission: read-only

    
  - name: SATELLITE_TYPE
    summary: Used with [mapType](Titanium.Map.View.mapType) to display satellite imagery of the area.
    description: |
        The Android Google Maps API does not support displaying satellite imagery
        _without_ roads and names, so specifying `SATELLITE_TYPE` on Android produces 
        the same results as [HYBRID_TYPE](Titanium.Map.HYBRID_TYPE) on other platforms.
    type: Number
    permission: read-only

    
  - name: STANDARD_TYPE
    summary: Used with [mapType](Titanium.Map.View.mapType) to display a street map that shows the position of all roads and some road names.
    type: Number
    permission: read-only

    
  - name: TERRAIN_TYPE
    summary: Used with [mapType](Titanium.Map.View.mapType) to display the terrain that shows the position of all roads and some road names.
    type: Number
    permission: read-only
    platforms: []
    
examples:
  - title: Map Example
    example: |
        This is a basic map example that places a custom annotation on the map, and 
        listens for click events on the annotation. 

        In this example, a custom property (`myid`) is added to the annotation object.
        While adding custom members to a Titanium object is not generally recommended,
        in this case it provides a mechanism for uniquely identifying an annotation. This
        can be useful, for example, if the annotations are dynamically generated 
        and it is not practical to identify them by title.

            var win = Titanium.UI.createWindow();
        
            var mountainView = Titanium.Map.createAnnotation({
                latitude:37.390749,
                longitude:-122.081651,
                title:"Appcelerator Headquarters",
                subtitle:'Mountain View, CA',
                pincolor:Titanium.Map.ANNOTATION_RED,
                animate:true,
                leftButton: '../images/appcelerator_small.png',
                myid:1 // Custom property to uniquely identify this annotation.
            });
            
            var mapview = Titanium.Map.createView({
                mapType: Titanium.Map.STANDARD_TYPE,
                region: {latitude:37.390749, longitude:-122.081651,
                         latitudeDelta:0.01, longitudeDelta:0.01},
                animate:true,
                regionFit:true,
                userLocation:true,
                annotations:[mountainView]
            });
            
            win.add(mapview);
            // Handle click events on any annotations on this map.
            mapview.addEventListener('click', function(evt) {

                Ti.API.info("Annotation " + evt.title + " clicked, id: " + evt.annotation.myid);

                // Check for all of the possible names that clicksouce
                // can report for the left button/view.
                if (evt.clicksource == 'leftButton' || evt.clicksource == 'leftPane' ||
                    evt.clicksource == 'leftView') {
                    Ti.API.info("Annotation " + evt.title + ", left button clicked.");
                }
            });
            win.open();

            // For the iOS platform, wait for the complete event to ensure the region is set
            if (Ti.Platform.name == 'iPhone OS') {
                mapview.addEventListener('complete', function(evt){
                    mapview.region = {
                        latitude:37.390749, longitude:-122.081651,
                        latitudeDelta:0.01, longitudeDelta:0.01
                    };
                });
            }

  - title: Alloy XML Markup
    example: |
        Previous example as an Alloy view.

        index.xml:

            <Alloy>
                <Window id="win">

                    <!-- Note the ns attribute is used to change the default namespace. -->
                    <View id="mapview" ns="Ti.Map" onClick="doClick" onComplete="setRegion"
                        animate="true" regionFit="true" userLocation="true"
                        mapType="Ti.Map.STANDARD_TYPE" >

                        <Annotation id="mountainView"
                          latitude="37.390749" longitude="-122.081651"
                          title="Appcelerator Headquarters" subtitle="Mountain View, CA"
                          pincolor="Titanium.Map.ANNOTATION_RED"
                          leftButton="/images/appcelerator_small.png"
                          myid="1"/>

                        <!-- Place other child views here, such as an ImageView to add an overlay. -->

                    </View>
                </Window>
            </Alloy>

        index.js:

            function doClick(evt){
                Ti.API.info("Annotation " + evt.title + " clicked, id: " + evt.annotation.myid);

                // Check for all of the possible names that clicksouce
                // can report for the left button/view.
                if (evt.clicksource == 'leftButton' || evt.clicksource == 'leftPane' ||
                    evt.clicksource == 'leftView') {
                    Ti.API.info("Annotation " + evt.title + ", left button clicked.");
                }
            };

            function setRegion(evt) {
                // For the iOS platform, wait for the complete event to ensure the region is set
                if (OS_IOS) {
                    $.mapview.region = {
                        latitude:37.390749, longitude:-122.081651,
                        latitudeDelta:0.01, longitudeDelta:0.01
                    };
                }
            }

            // These parameters can also be defined in the TSS file.
            $.mapview.annotations = [$.mountainView];
            $.mapview.region = {latitude:37.390749, longitude:-122.081651, latitudeDelta:0.01, longitudeDelta:0.01};

            $.win.open

